;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-off" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M112.851743 397.307841l359.239827 161.477718c31.738865 14.962783 45.439912 14.962783 79.82914 0l359.226524-161.477718c26.435069-12.33698 27.334555-64.767096 0-79.747275L551.92071 127.886669c-28.224832-16.727986-48.090275-15.84999-79.82914 0L112.851743 317.559543C85.513094 335.174736 84.639191 382.335848 112.851743 397.307841zM511.999488 160.084998l366.926904 197.352787L511.999488 512.045025 145.085888 357.437785 511.999488 160.084998zM511.999488 864.916818 145.085888 695.734628c1.252527 0.791016-32.470529-14.480806-56.443523-28.186969 0 20.472264 5.139044 57.939597 24.209378 68.073398l359.239827 161.495114c31.738865 14.953573 45.439912 14.953573 79.82914 0l359.226524-161.495114c17.726733-8.274454 24.209378-47.136553 24.209378-68.073398-23.099091 11.553127-55.815213 28.040636-56.43022 28.186969L511.999488 864.916818zM112.851743 566.464449l359.239827 161.486928c31.738865 14.945387 45.439912 14.945387 79.82914 0L911.147234 566.464449c17.726733-8.272407 24.209378-47.13553 24.209378-68.065212-23.093974 11.561313-55.815213 28.040636-56.43022 28.196179l-366.926904 169.147398L145.085888 526.595416c1.252527 0.782829-32.470529-14.499226-56.443523-28.196179C88.642364 518.855128 93.781408 556.339858 112.851743 566.464449z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-on" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M919.930783 653.420917c-5.720282 0-11.159154 1.165546-16.141632 3.231601l-0.005117-0.022513-0.191358 0.073678c-0.050142 0.033769-0.112564 0.056282-0.180102 0.084934L511.760546 818.847573 120.097262 656.787594c-0.056282-0.028653-0.118704-0.050142-0.180102-0.084934l-0.191358-0.073678-0.005117 0.022513c-4.977361-2.066055-10.42135-3.231601-16.141632-3.231601-23.319102 0-42.219567 18.910699-42.224684 42.230824 0 17.599843 10.781554 32.664957 26.084075 38.999223l0 0.016373 407.798776 168.748309c0.062422 0.022513 0.12382 0.045025 0.180102 0.073678l0.197498 0.073678 0-0.017396c4.977361 2.060939 10.41521 3.231601 16.146749 3.231601 5.714142 0 11.164271-1.170662 16.135492-3.231601l0 0.017396 0.197498-0.073678c0.061398-0.028653 0.12382-0.051165 0.180102-0.073678l407.798776-168.748309 0-0.016373c15.307637-6.334265 26.077935-21.399379 26.077935-38.999223C962.15035 672.332638 943.256024 653.420917 919.930783 653.420917zM919.930783 470.451722c-5.720282 0-11.159154 1.159406-16.141632 3.226484l-0.005117-0.022513-0.191358 0.078795c-0.056282 0.022513-0.118704 0.056282-0.180102 0.073678l-391.652028 162.071236-391.663284-162.071236c-0.056282-0.016373-0.118704-0.050142-0.186242-0.073678l-0.186242-0.078795-0.005117 0.022513c-4.977361-2.066055-10.42135-3.226484-16.141632-3.226484-23.325241 0-42.224684 18.905582-42.224684 42.224684 0 17.593703 10.781554 32.653701 26.084075 38.999223l0 0.016373 407.798776 168.743192c0.062422 0.028653 0.12382 0.050142 0.180102 0.078795l0.197498 0.078795 0-0.022513c4.977361 2.066055 10.41521 3.231601 16.146749 3.231601 5.714142 0 11.164271-1.165546 16.135492-3.231601l0 0.022513 0.197498-0.078795c0.061398-0.028653 0.12382-0.050142 0.180102-0.078795l407.798776-168.743192 0-0.016373c15.302521-6.345522 26.077935-21.399379 26.077935-38.999223C962.15035 489.357304 943.249885 470.451722 919.930783 470.451722zM87.437421 368.694153l0 0.022513 407.798776 168.743192c0.062422 0.028653 0.12382 0.050142 0.180102 0.078795l0.197498 0.078795 0-0.016373c4.977361 2.060939 10.41521 3.220345 16.146749 3.220345 5.714142 0 11.164271-1.159406 16.135492-3.220345l0 0.016373 0.197498-0.078795c0.061398-0.028653 0.12382-0.050142 0.180102-0.078795l407.798776-168.743192 0-0.022513c15.302521-6.339382 26.077935-21.394263 26.077935-38.993083 0-17.599843-10.775414-32.659841-26.084075-38.999223l0.005117-0.022513L528.273638 121.931027c-0.056282-0.017396-0.12382-0.039909-0.180102-0.073678l-0.197498-0.073678-0.00614 0.011256c-4.977361-2.054799-10.41521-3.220345-16.135492-3.220345-5.725398 0-11.164271 1.165546-16.141632 3.220345l-0.005117-0.011256-0.191358 0.073678c-0.056282 0.033769-0.118704 0.056282-0.180102 0.073678L87.437421 290.679335l0 0.022513c-15.302521 6.339382-26.084075 21.399379-26.084075 38.999223C61.353346 347.300914 72.134901 362.354771 87.437421 368.694153z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)